{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/app.js","webpack:///./src/components/battle/audio/lose.mp3","webpack:///./src/components/battle/audio/win.mp3","webpack:///./src/components/battle/battle.css?73f8","webpack:///./src/components/battle/battle.js","webpack:///./src/components/battle/img/battle-message.png","webpack:///./src/components/character/characters.js","webpack:///./src/components/character/img/female/female1.png","webpack:///./src/components/character/img/female/female2.png","webpack:///./src/components/character/img/female/female3.png","webpack:///./src/components/character/img/male/male1.png","webpack:///./src/components/character/img/male/male2.png","webpack:///./src/components/character/img/male/male3.png","webpack:///./src/components/character/img/monstrers/Golem_1/Body/Body.png","webpack:///./src/components/character/img/monstrers/Golem_1/Head/Head.png","webpack:///./src/components/character/img/monstrers/Golem_1/Legs/Legs.png","webpack:///./src/components/character/img/monstrers/Golem_2/Body/Body.png","webpack:///./src/components/character/img/monstrers/Golem_2/Head/Head.png","webpack:///./src/components/character/img/monstrers/Golem_2/Legs/Legs.png","webpack:///./src/components/character/img/monstrers/Golem_3/Body/Body.png","webpack:///./src/components/character/img/monstrers/Golem_3/Head/Head.png","webpack:///./src/components/character/img/monstrers/Golem_3/Legs/Legs.png","webpack:///./src/components/character/img/monstrers/Orc/Body/Body.png","webpack:///./src/components/character/img/monstrers/Orc/Head/Head.png","webpack:///./src/components/character/img/monstrers/Orc/Legs/Legs.png","webpack:///./src/components/character/names.js","webpack:///./src/components/character/person.js","webpack:///./src/components/controls/keyboard.js","webpack:///./src/components/loading/img/logo.png","webpack:///./src/components/loading/loading.js","webpack:///./src/components/loading/style.css?b999","webpack:///./src/components/modal-dialog/img/diploma.svg","webpack:///./src/components/modal-dialog/modal.css?ea81","webpack:///./src/components/modal-dialog/modal.js","webpack:///./src/components/modal-dialog/modal.template.js","webpack:///./src/components/spell-animation/animation.css?9492","webpack:///./src/components/spell-animation/animation.js","webpack:///./src/components/spell-animation/animations/animations.js","webpack:///./src/components/spell-animation/animations/explosion.gif","webpack:///./src/components/spell-animation/animations/fire.gif","webpack:///./src/components/spell-animation/animations/thunder.gif","webpack:///./src/components/spell-animation/animations/water.gif","webpack:///./src/components/spell-animation/sounds/explosion.mp3","webpack:///./src/components/spell-animation/sounds/fire.mp3","webpack:///./src/components/spell-animation/sounds/sounds.js","webpack:///./src/components/spell-animation/sounds/thunder.mp3","webpack:///./src/components/spell-animation/sounds/water.mp3","webpack:///./src/components/spells/explosion/explosion.js","webpack:///./src/components/spells/explosion/img/green-fire.jpg","webpack:///./src/components/spells/fire/fire.js","webpack:///./src/components/spells/fire/img/fire.jpg","webpack:///./src/components/spells/spells.js","webpack:///./src/components/spells/thunder/img/thunder.jpg","webpack:///./src/components/spells/thunder/thunder.js","webpack:///./src/components/spells/water/img/water.png","webpack:///./src/components/spells/water/water.js","webpack:///./src/components/tasks/comparing/comparing.js","webpack:///./src/components/tasks/comparing/comparing.template.js","webpack:///./src/components/tasks/eng-to-ru/dictionary.js","webpack:///./src/components/tasks/eng-to-ru/translation.js","webpack:///./src/components/tasks/eng-to-ru/translation.template.js","webpack:///./src/components/tasks/listening/img/microphone.svg","webpack:///./src/components/tasks/listening/listening.css?db92","webpack:///./src/components/tasks/listening/listening.js","webpack:///./src/components/tasks/listening/listening.template.js","webpack:///./src/components/tasks/listening/voices/apple.mp3","webpack:///./src/components/tasks/listening/voices/bird.mp3","webpack:///./src/components/tasks/listening/voices/black.mp3","webpack:///./src/components/tasks/listening/voices/cat.mp3","webpack:///./src/components/tasks/listening/voices/country.mp3","webpack:///./src/components/tasks/listening/voices/dog.mp3","webpack:///./src/components/tasks/listening/voices/snow.mp3","webpack:///./src/components/tasks/listening/voices/voices.js","webpack:///./src/components/tasks/listening/voices/white.mp3","webpack:///./src/components/tasks/math/math.css?8c09","webpack:///./src/components/tasks/math/math.js","webpack:///./src/components/tasks/math/math.template.js","webpack:///./src/components/tasks/picture/picture.css?756f","webpack:///./src/components/tasks/picture/picture.js","webpack:///./src/components/tasks/picture/picture.template.js","webpack:///./src/components/tasks/picture/pictures/car.jpg","webpack:///./src/components/tasks/picture/pictures/cat.jpg","webpack:///./src/components/tasks/picture/pictures/dog.jpg","webpack:///./src/components/tasks/picture/pictures/fish.jpg","webpack:///./src/components/tasks/picture/pictures/images.js","webpack:///./src/components/tasks/picture/pictures/leon.jpg","webpack:///./src/components/tasks/picture/pictures/panda.jpg","webpack:///./src/components/tasks/picture/pictures/tiger.jpg","webpack:///./src/components/tasks/plural/plural.js","webpack:///./src/components/tasks/plural/plural.template.js","webpack:///./src/components/tasks/plural/words.js","webpack:///./src/components/tasks/ru-to-eng/dictionary.js","webpack:///./src/components/tasks/ru-to-eng/translation.js","webpack:///./src/components/tasks/ru-to-eng/translation.template.js","webpack:///./src/components/tasks/sequence/sequence.js","webpack:///./src/components/tasks/sequence/sequence.template.js","webpack:///./src/components/tasks/task.js","webpack:///./src/components/tasks/tasks.js","webpack:///./src/screens/customisation/customisator.js","webpack:///./src/screens/customisation/customisator.template.js","webpack:///./src/screens/customisation/style.css?ba81","webpack:///./src/screens/game-scene/img/backgrounds/bg1.jpg","webpack:///./src/screens/game-scene/img/backgrounds/bg2.jpg","webpack:///./src/screens/game-scene/img/backgrounds/bg3.jpg","webpack:///./src/screens/game-scene/img/backgrounds/bg4.jpg","webpack:///./src/screens/game-scene/img/backgrounds/bg5.jpg","webpack:///./src/screens/game-scene/scene.css?b96c","webpack:///./src/screens/game-scene/scene.js","webpack:///./src/screens/game-scene/scene.template.js","webpack:///./src/screens/score/img/like.svg","webpack:///./src/screens/score/score.css?7c7e","webpack:///./src/screens/score/score.js","webpack:///./src/screens/score/score.template.js","webpack:///./src/style.css?0695"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;;;;;;AClFA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;ACPA,gF;;;;;;;;;;;ACAA,+E;;;;;;;;;;;ACAA,uC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,iCAAiC,EAAE;AACzD,sBAAsB,uCAAuC,EAAE;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wFAAwC,SAAS;AACjD;AACA;AACA;AACA,4CAA4C,qEAAqB;AACjE;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA,sBAAsB,0CAA0C,EAAE;AAClE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,gBAAgB,EAAE;AACxC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,wBAAwB,mBAAmB,EAAE;AAC7C;AACA;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,qBAAqB,EAAE;AAC7C;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,wBAAwB,6BAA6B,EAAE;AACvD,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,wBAAwB,8BAA8B,EAAE;AACxD;AACA;;AAEA;AACA;AACA;;AAEA;AACA,6CAA6C,aAAa;AAC1D;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,4CAA4C,YAAY;AACxD;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,sBAAsB,gCAAgC,EAAE;AACxD,sBAAsB,6BAA6B,EAAE;AACrD,sBAAsB,eAAe,EAAE;AACvC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACpRA,wF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEQ;;;;;;;;;;;;AC3BR,2F;;;;;;;;;;;ACAA,2F;;;;;;;;;;;ACAA,2F;;;;;;;;;;;ACAA,uF;;;;;;;;;;;ACAA,uF;;;;;;;;;;;ACAA,uF;;;;;;;;;;;ACAA,wG;;;;;;;;;;;ACAA,wG;;;;;;;;;;;ACAA,wG;;;;;;;;;;;ACAA,wG;;;;;;;;;;;ACAA,wG;;;;;;;;;;;ACAA,wG;;;;;;;;;;;ACAA,wG;;;;;;;;;;;ACAA,wG;;;;;;;;;;;ACAA,wG;;;;;;;;;;;ACAA,oG;;;;;;;;;;;ACAA,oG;;;;;;;;;;;ACAA,oG;;;;;;;;;;;;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gEAAgB;;;;;;;;;;;;;;;;ACvBhB;AACA;;AAEA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;;;;;;AC3CA;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,0EAA0E;AAC1E;AACA,+EAA+E;AAC/E;AACA,gFAAgF;AAChF;AACA,6EAA6E;AAC7E;AACA,+EAA+E;AAC/E;AACA,wEAAwE;AACxE;AACA,0EAA0E;AAC1E;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACjCA,+E;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,+BAA+B,EAAE;AACjF;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;;;;;;;;;;;AC/EA,uC;;;;;;;;;;;ACAA,uF;;;;;;;;;;;ACAA,uC;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,sFAAuC,SAAS;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,sBAAsB,kCAAkC,EAAE;AAC1D;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,sBAAsB,iBAAiB,EAAE;AACzC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;AC5FA;AACA;AACA;;;;;;;;;;;;ACFA,uC;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,iDAAiD,UAAU;AAC3D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;;;;;;;;;ACnCA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACVA,mG;;;;;;;;;;;ACAA,8F;;;;;;;;;;;ACAA,iG;;;;;;;;;;;ACAA,+F;;;;;;;;;;;ACAA,+F;;;;;;;;;;;ACAA,0F;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACVA,6F;;;;;;;;;;;ACAA,2F;;;;;;;;;;;;;;;ACAA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;ACLA,8F;;;;;;;;;;;;;;;ACAA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;ACLA,mF;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACLA,yF;;;;;;;;;;;;;;;ACAA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;ACLA,qF;;;;;;;;;;;;;;;ACAA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACLA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,8BAA8B,SAAS,QAAQ,UAAU;AACzD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;ACrDA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACNA;AACA,GAAG,yCAAyC;AAC5C,GAAG,oCAAoC;AACvC,GAAG,+BAA+B;AAClC,GAAG,0CAA0C;AAC7C,GAAG,2BAA2B;AAC9B,GAAG,yBAAyB;AAC5B,GAAG,2BAA2B;AAC9B,GAAG,2CAA2C;AAC9C,GAAG,uCAAuC;AAC1C,GAAG,yCAAyC;AAC5C,GAAG,wCAAwC;AAC3C,GAAG,8CAA8C;AACjD,GAAG,8BAA8B;AACjC,GAAG,kCAAkC;AACrC,GAAG,2BAA2B;AAC9B,GAAG,+CAA+C;AAClD,GAAG,4BAA4B;AAC/B,GAAG,kBAAkB;AACrB;;;;;;;;;;;;;;;;;ACnBA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACNA,6F;;;;;;;;;;;ACAA,uC;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;AC7DA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACNA,2F;;;;;;;;;;;ACAA,0F;;;;;;;;;;;ACAA,2F;;;;;;;;;;;ACAA,yF;;;;;;;;;;;ACAA,6F;;;;;;;;;;;ACAA,yF;;;;;;;;;;;ACAA,0F;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG,wEAA4B;AAC/B,GAAG,0EAA8B;AACjC,GAAG,0EAA8B;AACjC,GAAG,sEAA0B;AAC7B,GAAG,8EAAkC;AACrC,GAAG,sEAA0B;AAC7B,GAAG,wEAA4B;AAC/B,GAAG,0EAA8B;AACjC;;;;;;;;;;;;AClBA,2F;;;;;;;;;;;ACAA,uC;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,8BAA8B,SAAS,GAAG,KAAK,GAAG,UAAU;AAC5D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;AC/DA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACNA,uC;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACNA,yF;;;;;;;;;;;ACAA,yF;;;;;;;;;;;ACAA,yF;;;;;;;;;;;ACAA,0F;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG,2FAA+C;AAClD,GAAG,2FAA+C;AAClD,GAAG,2FAA+C;AAClD,GAAG,+FAAmD;AACtD,GAAG,+FAAmD;AACtD,GAAG,mGAAuD;AAC1D,GAAG,mGAAuD;AAC1D;;;;;;;;;;;;AChBA,0F;;;;;;;;;;;ACAA,2F;;;;;;;;;;;ACAA,2F;;;;;;;;;;;;;;;;ACAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACNA;AACA,GAAG,qCAAqC;AACxC,GAAG,uCAAuC;AAC1C,GAAG,qCAAqC;AACxC,GAAG,uCAAuC;AAC1C,GAAG,qCAAqC;AACxC,GAAG,uCAAuC;AAC1C,GAAG,iCAAiC;AACpC,GAAG,mCAAmC;AACtC,GAAG,yCAAyC;AAC5C;;;;;;;;;;;;;;ACVA;AACA,GAAG,sEAAsE;AACzE,GAAG,qCAAqC;AACxC,GAAG,kBAAkB;AACrB,GAAG,iBAAiB;AACpB,GAAG,mBAAmB;AACtB,GAAG,qBAAqB;AACxB,GAAG,mBAAmB;AACtB,GAAG,mBAAmB;AACtB,GAAG,oBAAoB;AACvB,GAAG,sBAAsB;AACzB,GAAG,qBAAqB;AACxB,GAAG,mBAAmB;AACtB,GAAG,+CAA+C;AAClD;;;;;;;;;;;;;;;;;ACdA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACNA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,8BAA8B,mBAAmB;AACjD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;ACzDA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACNA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,0CAA0C,EAAE;AAClE,sBAAsB,uCAAuC,EAAE;AAC/D,sBAAsB,yBAAyB,EAAE;AACjD;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;;;;;;;;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;;;;;;;ACdA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,2CAA2C,kBAAkB,EAAE;AAC/D;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,sBAAsB,qCAAqC,EAAE;AAC7D,sBAAsB,eAAe,EAAE;AACvC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,4EAAyB,oBAAoB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,sBAAsB,mBAAmB,EAAE;AAC3C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,sBAAsB,0CAA0C,EAAE;AAClE,sBAAsB,uCAAuC,EAAE;AAC/D,sBAAsB,yBAAyB,EAAE;AACjD;;AAEA;AACA;AACA,6FAA0C,oBAAoB;AAC9D,yHAAsE,oBAAoB;AAC1F,wGAAqD,oBAAoB;AACzE;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,sBAAsB,oBAAoB,EAAE;AAC5C;AACA;;AAEA;;;;;;;;;;;;;;ACpLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACpBA,uC;;;;;;;;;;;ACAA,0F;;;;;;;;;;;ACAA,0F;;;;;;;;;;;ACAA,0F;;;;;;;;;;;ACAA,0F;;;;;;;;;;;ACAA,0F;;;;;;;;;;;ACAA,uC;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBAAsB,qCAAqC,EAAE;AAC7D,sBAAsB,kCAAkC,EAAE;AAC1D,sBAAsB,iCAAiC,EAAE;AACzD;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;;;;;;;AC3FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC3BA,0E;;;;;;;;;;;ACAA,uC;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,gDAAgD,qBAAqB,EAAE;AACvE;AACA;;AAEA,sBAAsB,qCAAqC,EAAE;AAC7D;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,+CAA+C,UAAU;AACzD,qDAAqD,UAAU;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,8CAA8C,8BAA8B;AAC5E;AACA,8BAA8B,qBAAqB,eAAe,sBAAsB;AACxF;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB,cAAc;AACrC;AACA,KAAK;AACL;AACA;AACA,uBAAuB,cAAc;AACrC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;AC5FA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACJA,uC","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/app.js\");\n","import Loading from './components/loading/loading';\nimport Controls from './components/controls/keyboard';\nimport style from './style.css';\n\nconst loading = new Loading();\nconst controls = new Controls(loading);\nloading.initLoading(controls);\ncontrols.initControls();\n","module.exports = __webpack_public_path__ + \"src/components/battle/audio/lose.mp3\";","module.exports = __webpack_public_path__ + \"src/components/battle/audio/win.mp3\";","// extracted by mini-css-extract-plugin","import spells from '../spells/spells';\nimport Modal from '../modal-dialog/modal';\nimport imgMessage from './img/battle-message.png';\nimport Person from '../character/person';\nimport Scene from '../../screens/game-scene/scene';\nimport style from './battle.css';\nimport Task from '../tasks/task';\nimport Score from '../../screens/score/score'\nimport Animation from '../spell-animation/animation';\nimport sounds from '../spell-animation/sounds/sounds';\nimport win from './audio/win.mp3';\nimport lose from './audio/lose.mp3';\nimport voices from '../tasks/listening/voices/voices';\n\nclass Battle {\n  constructor(player, enemy) {\n    this.player = player;\n    this.enemy = enemy;\n    this.turn = 'player';\n    this.state = 'loaded';\n    this.choosenSpell = 'fire';\n    this.controls = undefined;\n    this.spellItems = [];\n    this.curentCursor = 0;\n  }\n\n  initBattle() {\n    const delayBeforeMessage = 2500;\n    const delayBeforeShowSpells = 4500;\n    this.setHP(this.player.hp, this.enemy.hp);\n    setTimeout(() => { this.showBattleMessage('Fight'); }, delayBeforeMessage);\n    setTimeout(() => { this.checkTurn(this.turn, this.state); }, delayBeforeShowSpells);\n  }\n\n  removeSpellContainer() {\n    const delay = 750;\n    const spellContainer = document.getElementById('spell-container');\n    spellContainer.classList.add('-hide');\n    setTimeout(() => {\n      spellContainer.remove();\n      this.checkTurn(this.turn, this.state);\n    }, delay);\n  }\n\n  offerSpells() {\n    const container = document.getElementById('spell-space');\n    const spellContainer = document.createElement('div');\n    const innerInfo = document.createElement('div');\n    const animationDelay = 250;\n\n    spellContainer.setAttribute('class', 'spell-container -hide');\n    spellContainer.setAttribute('id', 'spell-container');\n    innerInfo.setAttribute('class', 'inner-info');\n    innerInfo.innerText = 'Choose Your Spell';\n    for (let i = 0, len = spells.length; i < len; i++) {\n      const spell = document.createElement('div');\n      spell.setAttribute('class', 'spell');\n      spell.innerText = spells[i].name;\n      spell.style.backgroundImage = `url('${spells[i].srcToImage}')`;\n      spell.addEventListener('click', () => {\n        this.choosenSpell = spells[i].name;\n        this.state = 'chosen spell';\n        this.removeSpellContainer();\n      });\n      this.spellItems.push(spell);\n      spellContainer.appendChild(spell);\n    }\n    spellContainer.children[0].classList.add('-selected');\n    spellContainer.appendChild(innerInfo);\n    container.appendChild(spellContainer);\n\n    setTimeout(() => { spellContainer.classList.remove('-hide'); }, animationDelay);\n  }\n\n  checkTurn(turn, state) {\n    if (turn === 'player') {\n      if (state === 'loaded') {\n        this.offerSpells();\n      }\n      if (state === 'chosen spell') {\n        this.spellItems = [];\n        this.curentCursor = 0;\n        const modal = new Modal(this);\n        this.controls.controller = modal;\n        modal.controls = this.controls;\n        modal.showAllTasks();\n      }\n    }\n  }\n\n  removeModal() {\n    const modal = document.getElementById('modal');\n    const delay = 300;\n    modal.classList.add('-hide');\n    setTimeout(() => { modal.remove(); }, delay);\n  }\n\n  initDeath(entity) {\n    if (entity.role === 'player') {\n      const player = document.getElementById('player');\n      const playground = document.getElementById('playground');\n      const score = new Score();\n\n      this.controls.controller = score;\n      score.controls = this.controls;\n      score.writeRecord(this.player.name, this.player.score);\n      score.init();\n      playground.classList.add('-player-dead');\n      player.classList.add('-dead');\n    }\n    if (entity.role === 'monster') {\n      const monster = new Person();\n      const scene = new Scene(this.player, monster);\n      const enemy = document.getElementById('enemy');\n      const delayBeforeNewScene = 2000;\n\n      enemy.classList.add('-dead');\n      this.showBattleMessage('Next enemy!');\n      this.controls.controller = scene;\n      scene.controls = this.controls;\n      this.destroyPlayground();\n      setTimeout(() => { scene.initScene(); }, delayBeforeNewScene);\n    }\n  }\n\n  destroyPlayground() {\n    const animationDelay = 2000;\n    const playground = document.getElementById('playground');\n    playground.classList.add('-hide');\n    setTimeout(() => { playground.remove(); }, animationDelay);\n  }\n\n  damageEntity(entity, damage) {\n    if ((entity.hp - damage) <= 0) {\n      entity.hp = 0;\n    } else entity.hp -= damage;\n  }\n\n  setScore(entity) {\n    const winPoints = 5;\n    const scoreElem = document.getElementById('score-value');\n    entity.score += winPoints;\n    scoreElem.innerText = entity.score;\n  }\n\n  playSound(sound) {\n    if (navigator.userAgent.indexOf('Chrome') !== -1) {\n      const audio = new Howl({\n        src: [sound],\n        volume: 1,\n      });\n      audio.play();\n    } else {\n      const audio = new Audio(sound);\n      audio.play();\n    }\n  }\n\n  checkAlive(entity) {\n    if (entity.hp <= 0) {\n      this.initDeath(entity);\n    } else {\n      this.state = 'loaded';\n      this.checkTurn(this.turn, this.state);\n    }\n  }\n\n  compareDecisions(userDecision, predefinedDecision) {\n    const durationAnimation = 4000;\n    const attackBeginning = 2500;\n    const damage = 34;\n\n    this.removeModal();\n    if (userDecision === predefinedDecision) {\n      this.playSound(win);\n      this.setScore(this.player);\n      this.showBattleMessage('You attack');\n      setTimeout(() => {\n        const animation = new Animation(this.choosenSpell, document.getElementById('enemy'));\n        animation.play();\n        this.damageEntity(this.enemy, damage);\n        this.setHP(this.player.hp, this.enemy.hp);\n      }, attackBeginning);\n      setTimeout(() => { this.checkAlive(this.enemy); }, durationAnimation);\n    } else {\n      this.playSound(lose);\n      this.showBattleMessage('Enemy attack');\n      setTimeout(() => {\n        const animation = new Animation(this.choosenSpell, document.getElementById('player'));\n        animation.play();\n        this.damageEntity(this.player, damage);\n        this.setHP(this.player.hp, this.enemy.hp);\n      }, attackBeginning);\n      setTimeout(() => { this.checkAlive(this.player); }, durationAnimation);\n    }\n  }\n\n  setHP(playerHealth, enemyHealth) {\n    const playerHealthContainer = document.getElementById('player-hp');\n    const enemyHealthContainer = document.getElementById('enemy-hp');\n\n    if (playerHealth >= 1) {\n      playerHealthContainer.style.width = `${playerHealth}%`;\n      playerHealthContainer.innerText = playerHealth;\n    } else {\n      playerHealthContainer.style.width = '0%';\n      playerHealthContainer.innerText = 'Dead';\n    }\n    if (enemyHealth >= 1) {\n      enemyHealthContainer.style.width = `${enemyHealth}%`;\n      enemyHealthContainer.innerText = enemyHealth;\n    } else {\n      enemyHealthContainer.style.width = '0%';\n      enemyHealthContainer.innerText = 'Dead';\n    }\n  }\n\n  showBattleMessage(message) {\n    const text = document.createElement('div');\n    const delayBeforeShowing = 100;\n    const delaybeforehiding = 1600;\n    const removingDelay = 2300;\n\n    text.setAttribute('class', 'battle-message -hide');\n    text.innerText = message;\n    document.body.appendChild(text);\n\n    setTimeout(() => { text.classList.remove('-hide'); }, delayBeforeShowing);\n    setTimeout(() => { text.classList.add('-hide'); }, delaybeforehiding);\n    setTimeout(() => { text.remove(); }, removingDelay);\n  }\n\n  // pick needed spell with keyboard\n  reselectSpell(rest = 0) {\n    this.spellItems[this.curentCursor].classList.remove('-selected');\n    this.curentCursor += rest;\n    if (this.curentCursor >= this.spellItems.length) this.curentCursor = 0;\n    if (this.curentCursor <= -1) this.curentCursor = this.spellItems.length - 1;\n    this.spellItems[this.curentCursor].classList.add('-selected');\n  }\n\n  checkUserAction(action) {\n    if (action === 'arrow-right') {\n      if (this.turn === 'player' && this.state === 'loaded') {\n        this.reselectSpell(1);\n      }\n    }\n\n    if (action === 'arrow-left') {\n      if (this.turn === 'player' && this.state === 'loaded') {\n        this.reselectSpell(-1);\n      }\n    }\n\n    if (action === 'arrow-down') {\n      if (this.turn === 'player' && this.state === 'loaded') {\n        this.reselectSpell(2);\n      }\n    }\n\n    if (action === 'arrow-up') {\n      if (this.turn === 'player' && this.state === 'loaded') {\n        this.reselectSpell(-2);\n      }\n    }\n\n    if (action === 'enter') {\n      if (this.turn === 'player' && this.state === 'loaded') {\n        this.choosenSpell = spells[this.curentCursor].name;\n        this.state = 'chosen spell';\n        this.removeSpellContainer();\n      }\n    }\n  }\n}\n\nexport default Battle;\n","module.exports = __webpack_public_path__ + \"src/components/battle/img/battle-message.png\";","import female1 from './img/female/female1.png';\nimport female2 from './img/female/female2.png';\nimport female3 from './img/female/female3.png';\nimport male1 from './img/male/male1.png';\nimport male2 from './img/male/male2.png';\nimport male3 from './img/male/male3.png';\nimport head1 from './img/monstrers/Golem_1/Head/Head.png';\nimport head2 from './img/monstrers/Golem_2/Head/Head.png';\nimport head3 from './img/monstrers/Golem_3/Head/Head.png';\nimport head4 from './img/monstrers/Orc/Head/Head.png';\nimport body1 from './img/monstrers/Golem_1/Body/Body.png';\nimport body2 from './img/monstrers/Golem_2/Body/Body.png';\nimport body3 from './img/monstrers/Golem_3/Body/Body.png';\nimport body4 from './img/monstrers/Orc/Body/Body.png';\nimport legs1 from './img/monstrers/Golem_1/Legs/Legs.png';\nimport legs2 from './img/monstrers/Golem_2/Legs/Legs.png';\nimport legs3 from './img/monstrers/Golem_3/Legs/Legs.png';\nimport legs4 from './img/monstrers/Orc/Legs/Legs.png';\n\nconst males = [male1, male2, male3];\nconst females = [female1, female2, female3];\nconst monster1 = [head1, body1, legs1];\nconst monster2 = [head2, body2, legs2];\nconst monster3 = [head3, body3, legs3];\nconst monster4 = [head4, body4, legs4];\nconst monsters = [monster1, monster2, monster3, monster4];\n\nexport { males, females, monsters };\n","module.exports = __webpack_public_path__ + \"src/components/character/img/female/female1.png\";","module.exports = __webpack_public_path__ + \"src/components/character/img/female/female2.png\";","module.exports = __webpack_public_path__ + \"src/components/character/img/female/female3.png\";","module.exports = __webpack_public_path__ + \"src/components/character/img/male/male1.png\";","module.exports = __webpack_public_path__ + \"src/components/character/img/male/male2.png\";","module.exports = __webpack_public_path__ + \"src/components/character/img/male/male3.png\";","module.exports = __webpack_public_path__ + \"src/components/character/img/monstrers/Golem_1/Body/Body.png\";","module.exports = __webpack_public_path__ + \"src/components/character/img/monstrers/Golem_1/Head/Head.png\";","module.exports = __webpack_public_path__ + \"src/components/character/img/monstrers/Golem_1/Legs/Legs.png\";","module.exports = __webpack_public_path__ + \"src/components/character/img/monstrers/Golem_2/Body/Body.png\";","module.exports = __webpack_public_path__ + \"src/components/character/img/monstrers/Golem_2/Head/Head.png\";","module.exports = __webpack_public_path__ + \"src/components/character/img/monstrers/Golem_2/Legs/Legs.png\";","module.exports = __webpack_public_path__ + \"src/components/character/img/monstrers/Golem_3/Body/Body.png\";","module.exports = __webpack_public_path__ + \"src/components/character/img/monstrers/Golem_3/Head/Head.png\";","module.exports = __webpack_public_path__ + \"src/components/character/img/monstrers/Golem_3/Legs/Legs.png\";","module.exports = __webpack_public_path__ + \"src/components/character/img/monstrers/Orc/Body/Body.png\";","module.exports = __webpack_public_path__ + \"src/components/character/img/monstrers/Orc/Head/Head.png\";","module.exports = __webpack_public_path__ + \"src/components/character/img/monstrers/Orc/Legs/Legs.png\";","const adjectives = [\n  'noisy', 'dark',\n  'old', 'slow',\n  'crooked', 'wet',\n  'messy', 'bad',\n  'wide', 'foolhardy',\n];\nconst gists = [\n  'Ogre', 'Gnome',\n  'Goblin', 'Monster',\n  'Foe', 'Enemy',\n  'Perpetrator',\n  'Betrayer', 'murder',\n];\nconst names = [\n  'Noah', 'Liam',\n  'William', 'Mason',\n  'James', 'Benjamin',\n  'Jacob', 'Michael',\n  'Elijah', 'Ethan',\n  'Donald', 'Douglas',\n];\n\nexport default { adjectives, gists, names };\n","import * as characters from '../character/characters';\nimport listOfNames from '../character/names';\n\nclass Person {\n  constructor(entity = {}) {\n    this.hp = 100;\n    this.body = entity.src || this.createPartOfBody(characters.monsters, 1);\n    this.gender = entity.gender || 'male';\n    this.name = entity.name || this.createName(listOfNames.adjectives, listOfNames.gists, listOfNames.names);\n    this.legs = entity.src || this.createPartOfBody(characters.monsters, 2);\n    this.head = entity.src || this.createPartOfBody(characters.monsters, 0);\n    this.role = entity.src ? 'player' : 'monster';\n    this.score = 0;\n  }\n\n  createPartOfBody(list, part) {\n    const options = list.length;\n    const rndValue = this.getRandomInt(0, options);\n\n    return list[rndValue][part];\n  }\n\n  getRandomInt(min, max) {\n    return Math.floor(Math.random() * (max - min)) + min;\n  }\n\n  createName(adjectives, gists, names) {\n    const wholeName = [];\n    let count = adjectives.length;\n    let rndValue = this.getRandomInt(0, count);\n\n    wholeName[0] = adjectives[rndValue];\n    count = gists.length;\n    rndValue = this.getRandomInt(0, count);\n    wholeName[1] = gists[rndValue];\n    count = names.length;\n    rndValue = this.getRandomInt(0, count);\n    wholeName[2] = names[rndValue];\n\n    return wholeName.join(' ');\n  }\n}\n\nexport default Person;\n","class Controls {\n  constructor(controller) {\n    this.controller = controller;\n    this.controlhandle = null;\n  }\n\n  initControls() {\n    const controlHandle = (event) => {\n      // KeyboardEvent doesn't work in chrome, but still working in firefox\n      if (event.keyCode === KeyboardEvent.DOM_VK_RETURN\n        || event.keyCode === 13) this.controller.checkUserAction('enter'); //ENTER keyCode = 13\n      if (event.keyCode === KeyboardEvent.DOM_VK_LEFT\n        || event.keyCode === 37) this.controller.checkUserAction('arrow-left'); //Arrow Left keyCode = 37\n      if (event.keyCode === KeyboardEvent.DOM_VK_RIGHT\n        || event.keyCode === 39) this.controller.checkUserAction('arrow-right'); //Arrow Right keyCode = 39\n      if (event.keyCode === KeyboardEvent.DOM_VK_UP\n        || event.keyCode === 38) this.controller.checkUserAction('arrow-up'); //Arrow Up keyCode = 38\n      if (event.keyCode === KeyboardEvent.DOM_VK_DOWN\n        || event.keyCode === 40) this.controller.checkUserAction('arrow-down'); //Arrow Down keyCode = 40\n      if (event.keyCode === KeyboardEvent.DOM_VK_ESCAPE\n        || event.keyCode === 27) this.controller.checkUserAction('esc'); //ESC keyCode = 27\n      if (event.keyCode === KeyboardEvent.DOM_VK_SPACE\n        || event.keyCode === 32) this.controller.checkUserAction('space'); //SPACE keyCode = 32\n    };\n    document.addEventListener('keyup', controlHandle);\n    this.controlhandle = controlHandle;\n  }\n\n  disiableControls() {\n    document.removeEventListener('keyup', this.controlhandle);\n  }\n}\n\nexport default Controls;\n","module.exports = __webpack_public_path__ + \"src/components/loading/img/logo.png\";","import pic from './img/logo.png';\nimport style from './style.css';\nimport Customisator from '../../screens/customisation/customisator';\n\nclass Loading {\n  constructor() {\n    this.loadingScreen = null;\n    this.loadingCircle = null;\n    this.greetings = null;\n    this.loaded = false;\n    this.controls = null;\n  }\n\n  initLoading(controls) {\n    const innerCircle = document.createElement('div');\n\n    this.controls = controls;\n    this.loadingScreen = document.createElement('section');\n    this.loadingCircle = document.createElement('div');\n    this.loadingScreen.setAttribute('class', 'waiting');\n    this.loadingCircle.setAttribute('class', 'circle');\n    innerCircle.setAttribute('class', 'circle');\n    innerCircle.innerText = 'Loading...';\n    this.loadingCircle.appendChild(innerCircle);\n    this.loadingScreen.appendChild(this.loadingCircle);\n    document.body.appendChild(this.loadingScreen);\n\n    window.onload = this.initStateLoaded.bind(this);\n  }\n\n\n  initStateLoaded() {\n    const delay = 1000;\n    const container = document.createElement('div');\n    const btnEnter = document.createElement('div');\n    const logo = document.createElement('img');\n\n    this.loadingCircle.classList.add('-hide');\n    this.loadingScreen.classList.add('-loaded');\n    this.greetings = container;\n    setTimeout(() => {\n      this.loadingScreen.classList.add('-hide');\n      container.setAttribute('class', 'entry-screen');\n      btnEnter.setAttribute('class', 'btn-enter');\n      btnEnter.innerText = 'Press Enter';\n      btnEnter.addEventListener('click', () => { this.checkUserAction('enter'); });\n      logo.setAttribute('class', 'logo -hide');\n      logo.setAttribute('src', pic);\n      container.appendChild(logo);\n      container.appendChild(btnEnter);\n      document.body.appendChild(container);\n    }, delay);\n    setTimeout(() => {\n      this.loaded = true;\n      logo.classList.remove('-hide');\n    }, delay + 500);\n  }\n\n  checkUserAction(action) {\n    if (this.loaded === true) {\n      if (action === 'enter') {\n        const customisator = new Customisator(this.controls);\n        this.controls.controller = customisator;\n        customisator.initScene();\n        this.destroy();\n      }\n    }\n  }\n\n  destroy() {\n    const delay = 100;\n    this.greetings.classList.add('-hide');\n    setTimeout(() => {\n      this.loadingScreen.remove();\n      this.greetings.remove();\n    }, delay);\n  }\n}\n\nexport default Loading;\n","// extracted by mini-css-extract-plugin","module.exports = __webpack_public_path__ + \"src/components/modal-dialog/img/diploma.svg\";","// extracted by mini-css-extract-plugin","import template from './modal.template';\nimport style from './modal.css';\nimport bgImg from './img/diploma.svg';\nimport tasks from '../tasks/tasks';\n\nclass Modal {\n  constructor(battle) {\n    this.battle = battle;\n    this.controls = undefined;\n    this.currentRow = 0;\n    this.currentColumn = 0;\n    this.window = null;\n    this.arrTasks = [[], []];\n  }\n\n  showAllTasks() {\n    const window = document.createElement('section');\n    window.setAttribute('class', 'modal -hide');\n    window.setAttribute('id', 'modal');\n    window.innerHTML = template;\n    this.window = window;\n\n    for (let i = 0, len = tasks.length; i < len; i++) {\n      const item = document.createElement('div');\n      const nameTask = new tasks[i]().name;\n      if (i === 0) item.setAttribute('class', 'item -selected');\n      else item.setAttribute('class', 'item');\n      item.innerText = nameTask;\n      item.addEventListener('click', () => this.loadTask(i));\n      window.appendChild(item);\n      this.arrTasks[Math.floor(i / 4)].push(item);\n    }\n\n    document.body.appendChild(window);\n    const btnClose = document.getElementById('btn-close');\n    btnClose.addEventListener('click', () => this.clickBtnClose());\n    setTimeout(() => { window.classList.remove('-hide'); }, 100);\n  }\n\n  clickBtnClose() {\n    this.returnControls();\n    this.removeWindowTasks(this.window);\n    this.battle.state = 'loaded';\n    this.battle.checkTurn(this.battle.turn, this.battle.state);\n  }\n\n  loadTask(num) {\n    const task = new tasks[num](this.battle);\n    this.battle.state = 'solving task';\n    this.controls.controller = task;\n    task.controls = this.controls;\n    task.init();\n  }\n\n  returnControls() {\n    this.controls.controller = this.battle;\n    this.controls = this.battle;\n  }\n\n  removeWindowTasks(window) {\n    const delay = 500;\n    window.classList.add('-hide');\n    setTimeout(() => { window.remove(); }, delay);\n  }\n\n  // pick task with help keyboard\n  reselectTask(row = 0, column = 0) {\n    this.arrTasks[this.currentRow][this.currentColumn].classList.remove('-selected');\n    this.currentColumn += column;\n    if (this.currentColumn >= this.arrTasks[this.currentRow].length) this.currentColumn = 0;\n    if (this.currentColumn <= -1) this.currentColumn = this.arrTasks[this.currentRow].length - 1;\n    this.currentRow += row;\n    if (this.currentRow >= this.arrTasks.length) this.currentRow = 0;\n    if (this.currentRow <= -1) this.currentRow = this.arrTasks.length - 1;\n    this.arrTasks[this.currentRow][this.currentColumn].classList.add('-selected');\n  }\n\n  checkUserAction(action) {\n    if (action === 'arrow-right') this.reselectTask(0, 1);\n    if (action === 'arrow-left') this.reselectTask(0, -1);\n    if (action === 'arrow-down') this.reselectTask(1);\n    if (action === 'arrow-up') this.reselectTask(-1);\n    if (action === 'enter') {\n      if (this.battle.state !== 'solving task') {\n        const numOfTask = (this.currentRow * 4) + this.currentColumn;\n        this.loadTask(numOfTask);\n      }\n    }\n    if (action === 'esc') this.clickBtnClose();\n  }\n}\n\nexport default Modal;\n","export default `\n<div class=\"btn-close\" id=\"btn-close\">X</div>\n`;\n","// extracted by mini-css-extract-plugin","import animations from './animations/animations';\nimport sounds from './sounds/sounds';\nimport style from './animation.css';\n\nclass Animation {\n  constructor(typeAnimation, target, duration) {\n    this.type = typeAnimation;\n    this.target = target;\n    this.duration = duration || 2500;\n  }\n\n  play() {\n    const animationObj = animations[this.type];\n    const animation = document.createElement('img');\n    const sound = new Audio(sounds[this.type]);\n    sound.play();\n\n    animation.setAttribute('class', `animation ${this.type}`);\n    animation.setAttribute('src', animationObj);\n    this.target.appendChild(animation);\n    this.target.classList.remove('-moving');\n    this.target.classList.add('-pain');\n\n    setTimeout(() => {\n      this.remove(animation);\n      this.target.classList.remove('-pain');\n      this.target.classList.add('-moving');\n    }, this.duration);\n  }\n\n  remove(animation) {\n    animation.remove();\n  }\n}\n\nexport default Animation;\n","import thunder from './thunder.gif';\nimport water from './water.gif';\nimport fire from './fire.gif';\nimport explosion from './explosion.gif';\n\nexport default {\n  thunder,\n  water,\n  fire,\n  explosion,\n};\n","module.exports = __webpack_public_path__ + \"src/components/spell-animation/animations/explosion.gif\";","module.exports = __webpack_public_path__ + \"src/components/spell-animation/animations/fire.gif\";","module.exports = __webpack_public_path__ + \"src/components/spell-animation/animations/thunder.gif\";","module.exports = __webpack_public_path__ + \"src/components/spell-animation/animations/water.gif\";","module.exports = __webpack_public_path__ + \"src/components/spell-animation/sounds/explosion.mp3\";","module.exports = __webpack_public_path__ + \"src/components/spell-animation/sounds/fire.mp3\";","import thunder from './thunder.mp3';\nimport water from './water.mp3';\nimport fire from './fire.mp3';\nimport explosion from './explosion.mp3';\n\nexport default {\n  thunder,\n  water,\n  fire,\n  explosion,\n};\n","module.exports = __webpack_public_path__ + \"src/components/spell-animation/sounds/thunder.mp3\";","module.exports = __webpack_public_path__ + \"src/components/spell-animation/sounds/water.mp3\";","import fireImg from './img/green-fire.jpg';\n\nexport default {\n  srcToImage: fireImg,\n  name: 'explosion',\n};\n","module.exports = __webpack_public_path__ + \"src/components/spells/explosion/img/green-fire.jpg\";","import fireImg from './img/fire.jpg';\r\n\r\nexport default {\r\n  srcToImage: fireImg,\r\n  name: 'fire',\r\n};\r\n","module.exports = __webpack_public_path__ + \"src/components/spells/fire/img/fire.jpg\";","import fire from './fire/fire';\nimport explosion from './explosion/explosion';\nimport thunder from './thunder/thunder';\nimport water from './water/water';\n\nexport default [fire, explosion, water, thunder];\n","module.exports = __webpack_public_path__ + \"src/components/spells/thunder/img/thunder.jpg\";","import thunderImg from './img/thunder.jpg';\r\n\r\nexport default {\r\n  srcToImage: thunderImg,\r\n  name: 'thunder',\r\n};\r\n","module.exports = __webpack_public_path__ + \"src/components/spells/water/img/water.png\";","import waterImg from './img/water.png';\r\n\r\nexport default {\r\n  srcToImage: waterImg,\r\n  name: 'water',\r\n};\r\n","import template from './comparing.template';\nimport Task from '../task';\n\nclass Comparing extends Task {\n  constructor(battle) {\n    super(battle);\n    this.name = 'Compare';\n    this.answerEl = undefined;\n  }\n\n  init() {\n    const modal = document.getElementById('modal');\n    modal.innerHTML = template;\n\n    const expression = document.getElementById('expression');\n    const answer = document.getElementById('answer');\n    const btnDone = document.getElementById('btn-done');\n    const min = 0;\n    const max = 25;\n    const firstArg = this.getRandomIdx(min, max);\n    const secondArg = this.getRandomIdx(min, max);\n\n    this.predefinedAnswer = this.getSign(firstArg, secondArg);\n    expression.innerText = `${firstArg} sign ${secondArg}`;\n    answer.focus();\n    btnDone.addEventListener('click', () => this.sendResults(this.getValue(answer)));\n    this.answerEl = answer;\n  }\n\n  sendResults(value) {\n    this.returnControls();\n    this.showMessage(this.predefinedAnswer);\n    this.userAnswer = value;\n    this.battle.compareDecisions(this.userAnswer, this.predefinedAnswer);\n  }\n\n  getSign(firstNum, secondNum) {\n    if (firstNum === secondNum) return '=';\n    if (firstNum > secondNum) return '>';\n    return '<';\n  }\n\n  getValue(elem) {\n    return elem.value.trim().toLowerCase();\n  }\n\n  checkUserAction(action) {\n    if (action === 'enter') {\n      this.sendResults(this.getValue(this.answerEl));\n    }\n  }\n}\n\nexport default Comparing;\n","export default `\n<p>Compare numbers</p>\n<p>Compare number and write a sign(<>=)</p>\n<p id=\"expression\"></p>\n<input id=\"answer\" type=\"text\" autocomplete=\"off\" placeholder=\"Your answer\">\n<p class=\"btn-done\" id=\"btn-done\">It's done</p>\n`;\n","export default [\n  { cat: ['котик', 'кот', 'кошка', 'котэ'] },\n  { dog: ['собака', 'собачка', 'пёс'] },\n  { apple: ['яблоко', 'яблочко'] },\n  { drink: ['пить', 'выпивать', 'запивать'] },\n  { one: ['единица', 'один'] },\n  { two: ['два', 'двойка'] },\n  { three: ['три', 'тройка'] },\n  { four: ['четыре', 'четвёрка', 'четверка'] },\n  { five: ['пять', 'пятёрка', 'пятерка'] },\n  { six: ['шесть', 'шестёрка', 'шестерка'] },\n  { seven: ['семь', 'семёрка', 'семерка'] },\n  { eight: ['восемь', 'восьмёрка', 'восьмерка'] },\n  { nine: ['девять', 'девятка'] },\n  { zero: ['ноль', 'нуль', 'нолик'] },\n  { duck: ['утка', 'утёнок'] },\n  { pig: ['свинья', 'свинка', 'хрюша', 'хрюшка'] },\n  { bird: ['птица', 'птичка'] },\n  { job: ['работа'] },\n];\n","import template from './translation.template';\nimport dictionary from './dictionary';\nimport Task from '../task';\n\nclass WordsTranslation extends Task {\n  constructor(battle) {\n    super(battle);\n    this.name = 'ENG-RUS';\n    this.word = '';\n    this.arrAnswers = [];\n    this.answerEl = undefined;\n  }\n\n  init() {\n    const modal = document.getElementById('modal');\n    modal.innerHTML = template;\n\n    const expression = document.getElementById('expression');\n    const answer = document.getElementById('answer');\n    const btnDone = document.getElementById('btn-done');\n    const idx = this.getRandomIdx(0, dictionary.length);\n\n    this.word = String(Object.keys(dictionary[idx]));\n    this.arrAnswers = dictionary[idx][this.word];\n    this.predefinedAnswer = true;\n    expression.innerText = this.word;\n    answer.focus();\n    btnDone.addEventListener('click', () => this.sendResults(this.getValue(answer)));\n    this.answerEl = answer;\n  }\n\n  sendResults(value) {\n    this.returnControls();\n    this.showMessage(this.arrAnswers);\n    if (this.arrAnswers.includes(value)) {\n      this.userAnswer = true;\n    }\n    this.battle.compareDecisions(this.userAnswer, this.predefinedAnswer);\n  }\n\n  getValue(elem) {\n    return elem.value.trim().toLowerCase();\n  }\n\n  checkUserAction(action) {\n    if (action === 'enter') {\n      this.sendResults(this.getValue(this.answerEl));\n    }\n  }\n}\n\nexport default WordsTranslation;\n","export default `\n<p>Translation ENG to RUS</p>\n<p>Translate this word:</p>\n<p id=\"expression\"></p>\n<input id=\"answer\" type=\"text\" autocomplete=\"off\" placeholder=\"Your answer\">\n<p class=\"btn-done\" id=\"btn-done\">It's done</p>\n`;\n","module.exports = __webpack_public_path__ + \"src/components/tasks/listening/img/microphone.svg\";","// extracted by mini-css-extract-plugin","import microphone from './img/microphone.svg';\nimport style from './listening.css';\nimport template from './listening.template';\nimport voices from './voices/voices';\nimport Task from '../task';\n\nclass Listening extends Task {\n  constructor(battle) {\n    super(battle);\n    this.name = 'Listening';\n    this.answerEl = undefined;\n    this.soundWord = undefined;\n  }\n\n  init() {\n    const modal = document.getElementById('modal');\n    modal.innerHTML = template;\n\n    const btnVoice = document.getElementById('btn-voice');\n    const answer = document.getElementById('answer');\n    const btnDone = document.getElementById('btn-done');\n    const voiceIdx = this.getRandomIdx(0, voices.length);\n\n    // check browser\n    if (navigator.userAgent.indexOf('Chrome') !== -1) {\n      this.soundWord = new Howl({\n        src: [String(voices[voiceIdx].voice)],\n        volume: 1,\n      });\n    } else this.soundWord = new Audio(String(voices[voiceIdx].voice));\n    this.soundWord.play();\n    this.predefinedAnswer = voices[voiceIdx].word;\n    btnDone.addEventListener('click', () => this.sendResults(this.getValue(answer)));\n    btnVoice.addEventListener('click', () => {\n      this.soundWord.play();\n    });\n    this.answerEl = answer;\n    answer.focus();\n  }\n\n  sendResults(value) {\n    this.returnControls();\n    this.userAnswer = value;\n    this.showMessage(this.predefinedAnswer);\n    this.battle.compareDecisions(this.userAnswer, this.predefinedAnswer);\n  }\n\n  getValue(elem) {\n    return elem.value.trim().toLowerCase();\n  }\n\n  checkUserAction(action) {\n    if (action === 'enter') {\n      this.sendResults(this.getValue(this.answerEl));\n    }\n    if (action === 'space') {\n      this.soundWord.play();\n    }\n  }\n}\n\nexport default Listening;\n","export default `\n<p>Listerning</p>\n<p>Listen the voice and write a word in the field.</p>\n<div class=\"btn-voice\" id=\"btn-voice\"></div>\n<input id=\"answer\" type=\"text\" autocomplete=\"off\" placeholder=\"Your answer\">\n<p class=\"btn-done\" id=\"btn-done\">It's done</p>\n`;\n","module.exports = __webpack_public_path__ + \"src/components/tasks/listening/voices/apple.mp3\";","module.exports = __webpack_public_path__ + \"src/components/tasks/listening/voices/bird.mp3\";","module.exports = __webpack_public_path__ + \"src/components/tasks/listening/voices/black.mp3\";","module.exports = __webpack_public_path__ + \"src/components/tasks/listening/voices/cat.mp3\";","module.exports = __webpack_public_path__ + \"src/components/tasks/listening/voices/country.mp3\";","module.exports = __webpack_public_path__ + \"src/components/tasks/listening/voices/dog.mp3\";","module.exports = __webpack_public_path__ + \"src/components/tasks/listening/voices/snow.mp3\";","import bird from './bird.mp3';\nimport apple from './apple.mp3';\nimport black from './black.mp3';\nimport cat from './cat.mp3';\nimport country from './country.mp3';\nimport dog from './dog.mp3';\nimport snow from './snow.mp3';\nimport white from './white.mp3';\n\nexport default [\n  { word: 'bird', voice: bird },\n  { word: 'apple', voice: apple },\n  { word: 'black', voice: black },\n  { word: 'cat', voice: cat },\n  { word: 'country', voice: country },\n  { word: 'dog', voice: dog },\n  { word: 'snow', voice: snow },\n  { word: 'white', voice: white },\n];\n","module.exports = __webpack_public_path__ + \"src/components/tasks/listening/voices/white.mp3\";","// extracted by mini-css-extract-plugin","import template from './math.template';\nimport style from './math.css';\nimport Task from '../task';\n\nclass SimpleMathTask extends Task {\n  constructor(battle) {\n    super(battle);\n    this.name = 'Math';\n    this.answerEl = undefined;\n  }\n\n  init() {\n    const min = 5;\n    const max = 25;\n    const firstArg = this.getRandomIdx(min + 10, max + 10);\n    const secondArg = this.getRandomIdx(min - 5, max - 5);\n    const sign = this.getSign();\n    const modal = document.getElementById('modal');\n    modal.innerHTML = template;\n\n    const expression = document.getElementById('expression');\n    const answer = document.getElementById('answer');\n    const btnDone = document.getElementById('btn-done');\n\n    this.predefinedAnswer = this.getResult(firstArg, secondArg, sign);\n    expression.innerText = `${firstArg} ${sign} ${secondArg} = ??`;\n    btnDone.addEventListener('click', () => this.sendResults(this.getValue(answer)));\n    this.answerEl = answer;\n    answer.focus();\n  }\n\n  sendResults(value) {\n    if (isNaN(value)) this.showMessage('Incorrect value');\n    else {\n      this.returnControls();\n      this.userAnswer = value;\n      this.showMessage(this.predefinedAnswer);\n      this.battle.compareDecisions(this.userAnswer, this.predefinedAnswer);\n    }\n  }\n\n  getResult(firstArgument, secondArgument, sign) {\n    if (sign === '+') return (firstArgument + secondArgument);\n    if (sign === '-') return (firstArgument - secondArgument);\n  }\n\n  getSign() {\n    const idx = this.getRandomIdx(0, 2);\n    if (idx === 0) return '+';\n    if (idx === 1) return '-';\n  }\n\n  getValue(elem) {\n    return parseFloat(elem.value);\n  }\n\n  checkUserAction(action) {\n    if (action === 'enter') {\n      this.sendResults(this.getValue(this.answerEl));\n    }\n  }\n}\n\nexport default SimpleMathTask;\n","export default `\n<p>Math</p>\n<p>Solve the expression:</p>\n<p id=\"expression\"></p>\n<input id=\"answer\" type=\"text\" autocomplete=\"off\" placeholder=\"Your answer\">\n<p class=\"btn-done\" id=\"btn-done\">It's done</p>\n`;\n","// extracted by mini-css-extract-plugin","import template from './picture.template';\nimport images from './pictures/images';\nimport style from './picture.css';\nimport Task from '../task';\nimport dictionary from \"../eng-to-ru/dictionary\";\n\nclass PicturesTask extends Task {\n  constructor(battle) {\n    super(battle);\n    this.name = 'Picture';\n    this.answerEl = undefined;\n    this.arrAnswers = [];\n  }\n\n  init() {\n    const modal = document.getElementById('modal');\n    modal.innerHTML = template;\n\n    const picture = document.getElementById('picture');\n    const answer = document.getElementById('answer');\n    const btnDone = document.getElementById('btn-done');\n    const imageIdx = this.getRandomIdx(0, images.length);\n\n    this.arrAnswers = images[imageIdx].words;\n    this.predefinedAnswer = true;\n    picture.setAttribute('src', images[imageIdx].src);\n    btnDone.addEventListener('click', () => this.sendResults(this.getValue(answer)));\n    this.answerEl = answer;\n    answer.focus();\n  }\n\n  sendResults(value) {\n    this.returnControls();\n    if (this.arrAnswers.includes(value)) {\n      this.userAnswer = true;\n    }\n    this.showMessage(this.arrAnswers);\n    this.battle.compareDecisions(this.userAnswer, this.predefinedAnswer);\n  }\n\n  getValue(elem) {\n    return elem.value.trim().toLowerCase();\n  }\n\n  checkUserAction(action) {\n    if (action === 'enter') {\n      this.sendResults(this.getValue(this.answerEl));\n    }\n  }\n}\n\nexport default PicturesTask;\n","export default `\n<p>Captions</p>\n<p>What is drawn on the picture?</p>\n<img class=\"picture\" id=\"picture\" src=\"\">\n<input id=\"answer\" type=\"text\" autocomplete=\"off\" placeholder=\"Your answer\">\n<p class=\"btn-done\" id=\"btn-done\">It's done</p>\n`;\n","module.exports = __webpack_public_path__ + \"src/components/tasks/picture/pictures/car.jpg\";","module.exports = __webpack_public_path__ + \"src/components/tasks/picture/pictures/cat.jpg\";","module.exports = __webpack_public_path__ + \"src/components/tasks/picture/pictures/dog.jpg\";","module.exports = __webpack_public_path__ + \"src/components/tasks/picture/pictures/fish.jpg\";","import dog from './dog.jpg';\nimport cat from './cat.jpg';\nimport car from './car.jpg';\nimport fish from './fish.jpg';\nimport leon from './leon.jpg';\nimport panda from './panda.jpg';\nimport tiger from './tiger.jpg';\n\nexport default [\n  { words: ['dog', 'a dog', 'the dog'], src: dog },\n  { words: ['cat', 'a cat', 'the cat'], src: cat },\n  { words: ['car', 'a car', 'the car'], src: car },\n  { words: ['fish', 'a fish', 'the fish'], src: fish },\n  { words: ['leon', 'a leon', 'the leon'], src: leon },\n  { words: ['panda', 'a panda', 'the panda'], src: panda },\n  { words: ['tiger', 'a tiger', 'the tiger'], src: tiger },\n];\n","module.exports = __webpack_public_path__ + \"src/components/tasks/picture/pictures/leon.jpg\";","module.exports = __webpack_public_path__ + \"src/components/tasks/picture/pictures/panda.jpg\";","module.exports = __webpack_public_path__ + \"src/components/tasks/picture/pictures/tiger.jpg\";","import template from './plural.template';\nimport words from './words';\nimport Task from '../task';\n\nclass Plural extends Task {\n  constructor(battle) {\n    super(battle);\n    this.name = 'Plural';\n    this.answerEl = undefined;\n  }\n\n  init() {\n    const modal = document.getElementById('modal');\n    modal.innerHTML = template;\n\n    const expression = document.getElementById('expression');\n    const answer = document.getElementById('answer');\n    const btnDone = document.getElementById('btn-done');\n    const wordIdx = this.getRandomIdx(0, words.length);\n\n    this.predefinedAnswer = words[wordIdx].answer;\n    expression.innerText = words[wordIdx].word;\n    btnDone.addEventListener('click', () => this.sendResults(this.getValue(answer)));\n    this.answerEl = answer;\n    answer.focus();\n  }\n\n  sendResults(value) {\n    this.returnControls();\n    this.userAnswer = value;\n    this.showMessage(this.predefinedAnswer);\n    this.battle.compareDecisions(this.userAnswer, this.predefinedAnswer);\n  }\n\n  getValue(elem) {\n    return elem.value.trim().toLowerCase();\n  }\n\n  checkUserAction(action) {\n    if (action === 'enter') {\n      this.sendResults(this.getValue(this.answerEl));\n    }\n  }\n}\n\nexport default Plural;\n","export default `\n<p>Множестенное число</p>\n<p>Напиши слово во множественном числе:</p>\n<p id=\"expression\"></p>\n<input id=\"answer\" type=\"text\" autocomplete=\"off\" placeholder=\"Your answer\">\n<p class=\"btn-done\" id=\"btn-done\">It's done</p>\n`;\n","export default [\n  { word: 'высокий', answer: 'высокие' },\n  { word: 'одинокий', answer: 'одинокие' },\n  { word: 'смешной', answer: 'смешные' },\n  { word: 'красивая', answer: 'красивые' },\n  { word: 'быстрая', answer: 'быстрые' },\n  { word: 'успешная', answer: 'успешные' },\n  { word: 'умная', answer: 'умные' },\n  { word: 'низкий', answer: 'низкие' },\n  { word: 'маленький', answer: 'маленькие' },\n];\n","export default [\n  { 'работа': ['work', 'job', 'a work', 'a job', 'the work', 'the job'] },\n  { 'кот': ['cat', 'a cat', 'the cat'] },\n  { 'один': ['one'] },\n  { 'два': ['two'] },\n  { 'три': ['three'] },\n  { 'четыре': ['four'] },\n  { 'пять': ['five'] },\n  { 'шесть': ['six'] },\n  { 'семь': ['seven'] },\n  { 'восемь': ['eight'] },\n  { 'девять': ['nine'] },\n  { 'ноль': ['zero'] },\n  { 'яблоко': ['an apple', 'apple', 'the apple'] },\n];\n","import template from './translation.template';\nimport dictionary from './dictionary';\nimport Task from '../task';\n\nclass WordsTranslation extends Task {\n  constructor(battle) {\n    super(battle);\n    this.name = 'RUS-ENG';\n    this.word = '';\n    this.arrAnswers = [];\n    this.answerEl = undefined;\n  }\n\n  init() {\n    const modal = document.getElementById('modal');\n    modal.innerHTML = template;\n\n    const expression = document.getElementById('expression');\n    const answer = document.getElementById('answer');\n    const btnDone = document.getElementById('btn-done');\n    const idx = this.getRandomIdx(0, dictionary.length);\n\n    this.word = String(Object.keys(dictionary[idx]));\n    this.arrAnswers = dictionary[idx][this.word];\n    this.predefinedAnswer = true;\n    expression.innerText = this.word;\n    answer.focus();\n    btnDone.addEventListener('click', () => this.sendResults(this.getValue(answer)));\n    this.answerEl = answer;\n  }\n\n  sendResults(value) {\n    if (this.arrAnswers.includes(value)) {\n      this.userAnswer = true;\n    }\n    this.returnControls();\n    this.showMessage(this.arrAnswers);\n    this.battle.compareDecisions(this.userAnswer, this.predefinedAnswer);\n  }\n\n  getValue(elem) {\n    return elem.value.trim().toLowerCase();\n  }\n\n  checkUserAction(action) {\n    if (action === 'enter') {\n      this.sendResults(this.getValue(this.answerEl));\n    }\n  }\n}\n\nexport default WordsTranslation;\n","export default `\n<p>Translation RUS TO ENG</p>\n<p>Translate this word:</p>\n<p id=\"expression\"></p>\n<input id=\"answer\" type=\"text\" autocomplete=\"off\" placeholder=\"Your answer\">\n<p class=\"btn-done\" id=\"btn-done\">It's done</p>\n`;\n","import template from './sequence.template';\nimport Task from '../task';\n\nclass Sequence extends Task {\n  constructor(battle) {\n    super(battle);\n    this.name = 'Sequence';\n    this.answerEl = undefined;\n  }\n\n  init() {\n    const modal = document.getElementById('modal');\n    modal.innerHTML = template;\n\n    const expression = document.getElementById('expression');\n    const answer = document.getElementById('answer');\n    const btnDone = document.getElementById('btn-done');\n    const sequence = this.getSequence();\n\n    this.predefinedAnswer = String(sequence[sequence.length - 1]);\n    sequence.splice(-1, 1);\n    expression.innerText = `${sequence.join(' ')} => `;\n    answer.focus();\n    btnDone.addEventListener('click', () => this.sendResults(this.getValue(answer)));\n    this.answerEl = answer;\n  }\n\n  sendResults(value) {\n    this.returnControls();\n    this.showMessage(this.predefinedAnswer);\n    this.userAnswer = value;\n    this.battle.compareDecisions(this.userAnswer, this.predefinedAnswer);\n  }\n\n  getSequence() {\n    const arr = [];\n    const min = 0;\n    const max = 25;\n    const step = this.getRandomIdx(-5, 5);\n    const firstNum = this.getRandomIdx(min, max);\n    for (let i = 0; i < 4; i++) {\n      arr.push(i * step + firstNum);\n    }\n    return arr;\n  }\n\n  getValue(elem) {\n    return elem.value.trim().toLowerCase();\n  }\n\n  checkUserAction(action) {\n    if (action === 'enter') {\n      this.sendResults(this.getValue(this.answerEl));\n    }\n  }\n}\n\nexport default Sequence;\n","export default `\n<p>Sequence</p>\n<p>Continue the sequence:</p>\n<p id=\"expression\"></p>\n<input id=\"answer\" type=\"text\" autocomplete=\"off\" placeholder=\"Your answer\">\n<p class=\"btn-done\" id=\"btn-done\">It's done</p>\n`;\n","class Task {\n  constructor(battle) {\n    this.battle = battle;\n    this.userAnswer = null;\n    this.predefinedAnswer = null;\n    this.controls = null;\n  }\n\n  showMessage(text) {\n    const messageElement = document.createElement('div');\n    const span = document.createElement('span');\n    const showDelay = 50;\n    const hideDelay = 2000;\n    const removeDelay = 2400;\n\n    messageElement.setAttribute('class', 'message -hide');\n    span.innerText = text;\n    messageElement.appendChild(span);\n    document.body.appendChild(messageElement);\n    setTimeout(() => { messageElement.classList.remove('-hide'); }, showDelay);\n    setTimeout(() => { messageElement.classList.add('-hide'); }, hideDelay);\n    setTimeout(() => { messageElement.remove(); }, removeDelay);\n  }\n\n  getRandomIdx(min, max) {\n    return Math.floor(Math.random() * (max - min) + min);\n  }\n\n  returnControls() {\n    this.controls.controller = this.battle;\n    this.controls = this.battle;\n  }\n}\n\nexport default Task;\n","import math from './math/math';\nimport engToRU from './eng-to-ru/translation';\nimport ruToEng from './ru-to-eng/translation';\nimport listening from './listening/listening';\nimport picture from './picture/picture';\nimport plural from './plural/plural';\nimport comparing from './comparing/comparing';\nimport sequence from './sequence/sequence';\n\nconst tasks = [\n  math, engToRU, ruToEng, listening,\n  picture, plural, comparing, sequence,\n];\n\nexport default tasks;\n","import style from './style.css';\nimport * as characters from '../../components/character/characters';\nimport template from './customisator.template';\nimport Person from '../../components/character/person';\nimport Scene from '../game-scene/scene';\n\nclass Customisator {\n  constructor(controls) {\n    this.selectedGender = 'male';\n    this.orderArr = [];\n    this.focusOn = 0;\n    this.previewEl = null;\n    this.chosenPerson = 0;\n    this.inputEl = null;\n    this.controls = controls;\n  }\n\n  initScene() {\n    document.body.innerHTML = template;\n\n    const container = document.getElementById('customaser');\n    const input = document.getElementById('input');\n    const btnPickMales = document.getElementById('pick-males');\n    const btnPickFemales = document.getElementById('pick-females');\n    const btnViewLeft = document.getElementById('view-left');\n    const preview = document.getElementById('preview');\n    const btnViewRight = document.getElementById('view-right');\n    const btnStart = document.getElementById('start');\n    const focusDelay = 1000;\n    const animationDelay = 100;\n\n    input.addEventListener('click', () => { this.reSelect(0); });\n    this.inputEl = input;\n    btnPickMales.addEventListener('click', () => {\n      this.reSelect(1);\n      if (this.selectedGender !== 'male') this.changeGender('male', this.previewEl);\n    });\n    btnPickFemales.addEventListener('click', () => {\n      this.reSelect(2);\n      if (this.selectedGender !== 'female') this.changeGender('female', this.previewEl);\n    });\n    btnViewLeft.addEventListener('click', () => {\n      this.reSelect(3);\n      this.changeCharacter(-1);\n    });\n    preview.setAttribute('src', characters.males[this.chosenPerson]);\n    this.previewEl = preview;\n    btnViewRight.addEventListener('click', () => {\n      this.reSelect(4);\n      this.changeCharacter(1);\n    });\n    btnStart.addEventListener('click', () => {\n      this.reSelect(5);\n      if (this.inputEl.value.length < 1) this.showMessage('Write your name, please.');\n      else this.initNextStage();\n    });\n    this.orderArr = [input, btnPickMales, btnPickFemales, btnViewLeft, btnViewRight, btnStart];\n    setTimeout(() => { container.classList.remove('-hide'); }, animationDelay);\n    setTimeout(() => { input.focus(); }, focusDelay);\n  }\n\n  // pick character with help keyboard\n  reSelect(order, remainder = 0) {\n    this.orderArr[this.focusOn].blur();\n    this.orderArr[this.focusOn].classList.remove('-selected');\n    this.focusOn = order;\n    this.focusOn += remainder;\n    if (this.focusOn === this.orderArr.length) this.focusOn = 0;\n    if (this.focusOn === -1) this.focusOn = this.orderArr.length - 1;\n    this.orderArr[this.focusOn].classList.add('-selected');\n    this.orderArr[this.focusOn].focus();\n  }\n\n  initNextStage() {\n    const player = {\n      src: characters[`${this.selectedGender}s`][this.chosenPerson],\n      name: this.inputEl.value,\n      gender: this.selectedGender,\n    };\n    const person = new Person(player);\n    const enemy = new Person();\n    const delay = 200;\n    const scene = new Scene(person, enemy);\n\n    this.controls.controller = scene;\n    scene.controls = this.controls;\n    this.destroy();\n    setTimeout(() => { scene.initScene(); }, delay);\n  }\n\n  changeGender(gender, previewEl) {\n    if (gender === 'male') {\n      this.selectedGender = gender;\n      previewEl.setAttribute('src', characters.males[this.chosenPerson]);\n      this.orderArr[this.focusOn].classList.add('-chosen');\n      this.orderArr[2].classList.remove('-chosen');\n    } else if (gender === 'female') {\n      this.selectedGender = 'female';\n      previewEl.setAttribute('src', characters.females[this.chosenPerson]);\n      this.orderArr[this.focusOn].classList.add('-chosen');\n      this.orderArr[1].classList.remove('-chosen');\n    }\n    this.chosenPerson = 0;\n  }\n\n  showMessage(text) {\n    const messageElement = document.createElement('div');\n    const span = document.createElement('span');\n    const showDelay = 50;\n    const hideDelay = 2000;\n    const removeDelay = 2400;\n\n    messageElement.setAttribute('class', 'message -hide');\n    span.innerText = text;\n    messageElement.appendChild(span);\n    document.body.appendChild(messageElement);\n\n    setTimeout(() => { messageElement.classList.remove('-hide'); }, showDelay);\n    setTimeout(() => { messageElement.classList.add('-hide'); }, hideDelay);\n    setTimeout(() => { messageElement.remove(); }, removeDelay);\n  }\n\n  changeCharacter(remainder) {\n    this.chosenPerson += remainder;\n    if (this.chosenPerson > characters[`${this.selectedGender}s`].length - 1) this.chosenPerson = 0;\n    else if (this.chosenPerson < 0) this.chosenPerson = characters[`${this.selectedGender}s`].length - 1;\n    this.previewEl.setAttribute('src', characters[`${this.selectedGender}s`][this.chosenPerson]);\n  }\n\n  checkUserAction(action) {\n    if (action === 'arrow-down' || action === 'arrow-right') {\n      this.reSelect(this.focusOn, 1);\n    }\n\n    if (action === 'arrow-left' || action === 'arrow-up') {\n      this.reSelect(this.focusOn, -1);\n    }\n\n    if (action === 'enter') {\n      if (this.focusOn === 1) {\n        if (this.selectedGender !== 'male') {\n          this.changeGender('male', this.previewEl);\n        }\n      }\n\n      if (this.focusOn === 2) {\n        if (this.selectedGender !== 'female') {\n          this.changeGender('female', this.previewEl);\n        }\n      }\n\n      // cursor on arrow left\n      if (this.focusOn === 3) {\n        this.changeCharacter(-1);\n      }\n\n      // cursor on arrow right\n      if (this.focusOn === 4) {\n        this.changeCharacter(1);\n      }\n\n      // cursor on btn start\n      if (this.focusOn === 5) {\n        if (this.inputEl.value.length < 1) this.showMessage('Write your name, please.');\n        else this.initNextStage();\n      }\n\n      if (this.focusOn === 0) this.checkUserAction('arrow-down');\n    }\n  }\n\n  destroy() {\n    const container = document.getElementById('customaser');\n    const delay = 500;\n\n    container.classList.add('-hide');\n    setTimeout(() => { container.remove(); }, delay);\n  }\n}\n\nexport default Customisator;\n","export default `\n<section class=\"customaser -hide\" id=\"customaser\">\n  <p class=\"title\">Choose your hero.</p>\n  <section class=\"view-section\">\n    <p class=\"login\">\n        Your Name:\n        <input type=\"text\" id=\"input\" autocomplete=\"off\" placeholder=\"What is your name?\">\n    </p>\n    <div class=\"choosing-gender\">\n      <div class=\"gender-btn -chosen\" id=\"pick-males\">Male</div>\n      <div class=\"gender-btn\" id=\"pick-females\">Famale</div>\n    </div>    \n    <div class=\"view-character\">\n      <div id=\"view-left\">\\<</div>\n      <img src=\"\" alt=\"player\" id=\"preview\">\n      <div id=\"view-right\">\\></div>\n    </div>\n    <div class=\"btn-start\" id=\"start\">Start</div>\n  </section>\n</section>\n`;\n","// extracted by mini-css-extract-plugin","module.exports = __webpack_public_path__ + \"src/screens/game-scene/img/backgrounds/bg1.jpg\";","module.exports = __webpack_public_path__ + \"src/screens/game-scene/img/backgrounds/bg2.jpg\";","module.exports = __webpack_public_path__ + \"src/screens/game-scene/img/backgrounds/bg3.jpg\";","module.exports = __webpack_public_path__ + \"src/screens/game-scene/img/backgrounds/bg4.jpg\";","module.exports = __webpack_public_path__ + \"src/screens/game-scene/img/backgrounds/bg5.jpg\";","// extracted by mini-css-extract-plugin","import style from './scene.css';\nimport template from './scene.template';\nimport bg1 from './img/backgrounds/bg1.jpg';\nimport bg2 from './img/backgrounds/bg2.jpg';\nimport bg3 from './img/backgrounds/bg3.jpg';\nimport bg4 from './img/backgrounds/bg4.jpg';\nimport bg5 from './img/backgrounds/bg5.jpg';\nimport Battle from '../../components/battle/battle';\n\nconst backgrounds = [bg1, bg2, bg3, bg4, bg5];\n\nclass Scene {\n  constructor(player, enemy) {\n    this.player = player;\n    this.enemy = enemy;\n    this.controls = undefined;\n  }\n\n  initScene() {\n    document.body.innerHTML = template;\n\n    const container = document.getElementById('playground');\n    const background = document.getElementById('background');\n    const player = this.addPlayer(this.player);\n    const enemy = this.addEnemy(this.enemy);\n    const removeDelay = 500;\n    const showDelay = 2000;\n    const movingDelay = 2500;\n    const battle = new Battle(this.player, this.enemy);\n\n    this.controls.controller = battle;\n    battle.controls = this.controls;\n    battle.initBattle();\n    background.setAttribute('src', backgrounds[this.player.getRandomInt(0, backgrounds.length)]);\n    this.addNames(this.player.name, this.enemy.name);\n    this.addScore(this.player.score);\n\n    setTimeout(() => { container.classList.remove('-hide'); }, removeDelay);\n    setTimeout(() => { player.classList.remove('-hide'); }, showDelay);\n    setTimeout(() => { enemy.classList.remove('-hide'); }, showDelay);\n    setTimeout(() => {\n      enemy.classList.add('-moving');\n      player.classList.add('-moving');\n    }, movingDelay);\n  }\n\n  addScore(score) {\n    const scoreContainer = document.getElementById('score-value');\n    scoreContainer.innerText = score;\n  }\n\n  addNames(playerName, enemyName) {\n    const playerNameContainer = document.getElementById('player-name');\n    const enemyNameContainer = document.getElementById('enemy-name');\n    playerNameContainer.innerText = playerName;\n    enemyNameContainer.innerText = enemyName;\n  }\n\n  addPlayer(entity) {\n    const container = document.getElementById('player');\n    const view = document.createElement('img');\n\n    view.setAttribute('src', entity.body);\n    view.setAttribute('class', 'player-body');\n    container.classList.add('-hide');\n    container.appendChild(view);\n\n    return container;\n  }\n\n  addEnemy(entity) {\n    const container = document.getElementById('enemy');\n    const head = document.createElement('img');\n    const body = document.createElement('img');\n    const legs = document.createElement('img');\n\n    head.setAttribute('src', entity.head);\n    head.setAttribute('class', 'head');\n    body.setAttribute('src', entity.body);\n    body.setAttribute('class', 'body');\n    legs.setAttribute('src', entity.legs);\n    legs.setAttribute('class', 'legs');\n    container.classList.add('-hide');\n    container.appendChild(head);\n    container.appendChild(body);\n    container.appendChild(legs);\n\n    return container;\n  }\n}\n\nexport default Scene;\n","export default `\n<section class=\"playground -hide\" id=\"playground\">\n    <img src=\"\" alt=\"\" class=\"background\" id=\"background\">\n    <section class=\"stats\">\n        <div class=\"name-and-hpbar\">\n            <p class=\"name\" id=\"player-name\"></p>\n            <div class=\"hpbar\">\n                <div class=\"hp\" id=\"player-hp\"></div>\n            </div>\n        </div>\n        <div class=\"score\">\n            <span class=\"text\">Score</span>\n            <span class=\"value\" id=\"score-value\"></span>\n        </div>\n        <div class=\"name-and-hpbar\">\n            <p class=\"name\" id=\"enemy-name\"></p>\n            <div class=\"hpbar\">\n                <div class=\"hp\" id=\"enemy-hp\"></div>\n            </div>\n        </div>\n    </section> \n    <section class=\"battleground\">\n        <div class=\"character\" id=\"player\"></div>\n        <div class=\"spell-space\" id=\"spell-space\"></div>\n        <div class=\"character\" id=\"enemy\"></div>\n    </section>   \n</section>\n`;\n","module.exports = __webpack_public_path__ + \"src/screens/score/img/like.svg\";","// extracted by mini-css-extract-plugin","import Customisator from '../customisation/customisator';\nimport template from './score.template';\nimport style from './score.css';\nimport bg from './img/like.svg';\nimport Loading from '../../components/loading/loading';\n\nclass Score {\n  constructor() {\n    this.controls = null;\n  }\n\n  init() {\n    const container = document.createElement('div');\n    container.setAttribute('class', 'score-component -hide');\n    container.innerHTML = template;\n    document.body.appendChild(container);\n\n    const btnNewGame = document.getElementById('btn-new-game');\n    const delay = 100;\n\n    btnNewGame.addEventListener('click', () => { this.startNewGame(); });\n    if (!this.isStorageExist()) this.addStorage();\n    this.padScoreList();\n\n    setTimeout(() => { container.classList.remove('-hide'); }, delay);\n  }\n\n  getStorage() {\n    return JSON.parse(localStorage.getItem('rssGame'));\n  }\n\n  padScoreList() {\n    const scoreTable = document.getElementById('score-table');\n    const scorePlayers = this.getStorage();\n    const maxResult = 5;\n\n    for (let i = 0, leni = scorePlayers.length; i < leni; i++) {\n      for (let j = 0, lenj = scorePlayers.length - 1; j < lenj; j++) {\n        if (scorePlayers[j].score < scorePlayers[j + 1].score) {\n          const max = scorePlayers[j];\n          scorePlayers[j] = scorePlayers[j + 1];\n          scorePlayers[j + 1] = max;\n        }\n      }\n    }\n\n    for (let i = 0, len = scorePlayers.length; (i < len) && (i < maxResult); i++) {\n      const li = document.createElement('li');\n      li.innerHTML = `<span>${scorePlayers[i].name}</span><span>${scorePlayers[i].score}</span>`;\n      scoreTable.appendChild(li);\n    }\n  }\n\n  startNewGame() {\n    const customiser = new Customisator();\n    this.controls.controller = customiser;\n    customiser.controls = this.controls;\n    customiser.initScene();\n  }\n\n  removeStorage() {\n    localStorage.removeItem('rssGame');\n  }\n\n  addStorage() {\n    const arr = JSON.stringify([]);\n    localStorage.setItem('rssGame', arr);\n  }\n\n  isStorageExist() {\n    const obj = this.getStorage();\n    return obj !== null;\n  }\n\n  writeRecord(name, score) {\n    let storageArr = this.getStorage();\n    if (storageArr) {\n      storageArr.push({ name, score });\n      localStorage.setItem('rssGame', JSON.stringify(storageArr));\n    } else {\n      this.addStorage();\n      storageArr = this.getStorage();\n      storageArr.push({ name, score });\n      localStorage.setItem('rssGame', JSON.stringify(storageArr));\n    }\n  }\n\n  checkUserAction(action) {\n    if (action === 'enter') this.startNewGame();\n  }\n}\n\nexport default Score;\n","export default `\n<p class=\"title\">Score top 5</p>\n<ol class=\"score-table\" id=\"score-table\"></ol>\n<div class=\"btn-new-game\" id=\"btn-new-game\">Start new game</div>\n`;\n","// extracted by mini-css-extract-plugin"],"sourceRoot":""}